#参考： https://www.cnblogs.com/lidabo/p/4521123.html
CROSS_COMPILE = arm-linux-
AS		= $(CROSS_COMPILE)as
LD		= $(CROSS_COMPILE)ld  			#链接工具
CC		= $(CROSS_COMPILE)gcc  			#编译工具
CPP		= $(CC) -E
AR		= $(CROSS_COMPILE)ar  			#打包工具
NM		= $(CROSS_COMPILE)nm

STRIP		= $(CROSS_COMPILE)strip		#优化工具
OBJCOPY		= $(CROSS_COMPILE)objcopy
OBJDUMP		= $(CROSS_COMPILE)objdump

export AS LD CC CPP AR NM				#将定义的变量导出，方便其他makefile使用
export STRIP OBJCOPY OBJDUMP	

CFLAGS := -Wall -O2 -g					#编译器参数
CFLAGS += -I $(shell pwd)/include		#指定编译器头文件（可变）

LDFLAGS := -lm -lfreetype				#指定编译器链接库（可变）

export CFLAGS LDFLAGS

TOPDIR := $(shell pwd)
export TOPDIR

TARGET := show_file

#-------------------------顶层要生成的.o文件以及顶层文件夹(根据实际项目手动修改)------------------
obj-y += main.o
obj-y += display/
obj-y += draw/
obj-y += encoding/
obj-y += fonts/

#--------------------------------------------顶层的第一个规则(默认规则)-----------------------------------------
all : 
	make -C ./ -f $(TOPDIR)/Makefile.build		#进入当前目录，使用顶层的makefile.build进行编译
	$(CC) $(LDFLAGS) -o $(TARGET) built-in.o	#将编译好的built-in.o文件链接生成我们的目标文件

#------------------------------------------------顶层的清除规则-------------------------------------------------------
clean:
	rm -f $(shell find -name "*.o")
	rm -f $(TARGET)

distclean:
	rm -f $(shell find -name "*.o")
	rm -f $(shell find -name "*.d")
	rm -f $(TARGET)
	